{"version":3,"sources":["components/header/header.tsx","components/base-layout/base-layout.tsx","components/button/button.tsx","services/wallets.ts","api/client.ts","api/api.ts","components/loader/loader.tsx","components/authorization-steps/authorization-steps.tsx","hooks/useFetch.ts","components/link-data/link-data.tsx","pages/authorization/authorization.tsx","hooks/useSteps.ts","utils/common.ts","components/token-auto-complete/token-auto-complete.tsx","hooks/useDebounce.ts","utils/validators.ts","components/create-link-token-balance/create-link-token-balance.tsx","pages/create-link/create-link.tsx","utils/tokens.ts","components/random-emoji/random-emoji.tsx","pages/main/main.tsx","pages/plugin/plugin.tsx","pages/telegram-bot/telegram-bot.tsx","App.tsx","index.tsx"],"names":["Header","className","to","BaseLayout","Button","children","rest","shape","size","type","APP_NAME","WalletController","network","NetworkType","MAINNET","wallet","accountAddress","signature","this","options","name","iconUrl","window","location","origin","preferredNetwork","BeaconWallet","client","getActiveAccount","then","account","address","clearActiveAccount","a","forcePermission","loadActiveAccount","activeAccount","requestPermissions","permissions","accountInfo","console","log","title","timestamp","Date","toISOString","formattedInput","join","bytes","char2Bytes","payloadBytes","String","length","payload","signingType","SigningType","MICHELINE","sourceAddress","requestSignPayload","signedPayload","error","axiosInstance","axios","create","baseURL","timeout","get","delete","post","put","patch","request","fetchLinkData","link","params","searchTokens","q","searchToken","contract","createSecureLink","Loader","props","icon","LoadingOutlined","style","fontSize","spin","indicator","Step","Steps","AuthorizationSteps","steps","current","status","direction","map","index","description","subTitle","useFetch","fetchMethod","initialParams","forceStart","useState","updateParams","isLoading","setIsLoading","data","setData","hasError","setHasError","isDone","setIsDone","errorMessage","setErrorMessage","refetchIndex","setRefetchIndex","refetch","prevRefetchIndex","fetch","useCallback","restParams","response","catch","err","message","finally","useEffect","LinkDataView","links","token","isSeparateLink","minBalance","parseInt","metadata","walletController","STEPS","AuthorizePage","linkId","useParams","_steps","initialSteps","useMemo","step","setCurrent","setStatus","setStateError","setError","nextStep","val","useSteps","setLinks","fetchLinkRequest","useRef","isUrlIncorrect","tokenName","symbol","handleSuccess","setTimeout","open","checkWalletBalance","checkUser","getAccountAddress","getSignature","res","e","signData","requestSign","connectWallet","href","target","rel","onClick","formatIpfsUrl","url","replace","renderToken","image","thumbnailUri","displayUri","shouldShowContract","backgroundImage","TokenAutoComplete","onSelect","search","setSearch","setOptions","selectedToken","setSelectedToken","searchTokensRequest","debouncedTokenSearch","func","delay","cleanUp","timeoutRef","clearTimer","clearTimeout","undefined","args","Promise","resolve","useDebounce","searchTokenRequest","onSearch","searchText","list","renderedOptions","option","value","id","label","renderSearchOptions","handleSelect","find","op","handleClear","placeholder","notFoundContent","allowClear","onClear","HTTP_VALIDATOR","TELEGRAM_VALIDATOR","PLACEHOLDERS","http","telegram","CreateLinkTokenBalance","withHeader","linkType","setLinkType","tokenId","totalSupply","decimals","artifactUri","supplyNumber","hasMinBalance","handleLinkTypeChange","Item","wrapperCol","offset","tooltip","initialValue","Group","optionType","buttonStyle","onChange","disabled","rules","validator","_","test","reject","Error","BASE_LINK","CreateLinkPage","Form","useForm","form","setToken","setIsSeparateLink","selectToken","sortedTokens","sort","b","isTokenFA12","tokens","standard","isTokenFA2","handleSeparateLinkChange","checked","trySubmitForm","submit","createLinkRequest","handleSubmit","Object","entries","reduce","acc","requestParams","scroll","top","left","behavior","scrollTo","code","layout","labelCol","span","onFinish","requiredMark","scrollToFirstError","required","t","loading","marginLeft","marginRight","EMOJIS","RandomEmoji","emoji","setEmoji","interval","setInterval","Math","floor","random","clearInterval","MainPage","navigate","useNavigate","handleClick","PluginPage","TelegramBot","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d530090.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './header.scss';\n\ntype Props = {};\n\nexport const Header: FC<Props> = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\"></div>\n\n      <div className=\"header__nav\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/create\">Create link</Link>\n        <Link to=\"/plugin\">Use our plugin</Link>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from '../header/header';\n\nimport './base-layout.scss';\n\nexport const BaseLayout: FC = () => {\n  return (\n    <div className=\"base-layout\">\n      <Header />\n      <div className=\"base-layout__main\">\n        <Outlet />\n      </div>\n\n      <div className=\"base-layout__footer\">\n        {/* Powered by{' '}\n        <a href=\"https://tzkt.io/\" target=\"_blank\" rel=\"noreferrer\">\n          TzKT API\n        </a> */}\n      </div>\n    </div>\n  );\n};\n","import { Button as AntButton, ButtonProps } from 'antd';\nimport React, { FC } from 'react';\nimport './button.scss';\n\nexport const Button: FC<ButtonProps> = ({ children, ...rest }) => {\n  return (\n    <AntButton shape=\"round\" size=\"large\" type=\"default\" {...rest}>\n      {children}\n    </AntButton>\n  );\n};\n","// import { TezosToolkit } from '@taquito/taquito';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { char2Bytes } from '@taquito/utils';\nimport { NetworkType, RequestSignPayloadInput, SigningType } from '@airgap/beacon-sdk';\n\nconst APP_NAME = 'Test app';\n\nexport class WalletController {\n  // private tezos;\n  private network: NetworkType;\n  private wallet: BeaconWallet;\n  private accountAddress: string = '';\n  private signature: string = '';\n\n  constructor(network = NetworkType.MAINNET) {\n    this.network = network;\n\n    const options = {\n      name: APP_NAME,\n      iconUrl: `${window.location.origin}/favicon.ico`,\n      preferredNetwork: this.network,\n    };\n\n    this.wallet = new BeaconWallet(options);\n\n    // this.tezos = new TezosToolkit(accountSettings.provider);\n  }\n  getAccountAddress() {\n    return this.accountAddress;\n  }\n  getSignature() {\n    return this.signature;\n  }\n\n  loadActiveAccount() {\n    return this.wallet.client.getActiveAccount().then((account) => {\n      if (account) {\n        this.accountAddress = account.address;\n      }\n      return account;\n    });\n  }\n\n  clearActiveAccount() {\n    return this.wallet.client.clearActiveAccount().then(() => {\n      this.accountAddress = '';\n    });\n  }\n\n  async connectWallet(forcePermission = false, network = this.network) {\n    const options = {\n      network: {\n        type: network,\n      },\n    };\n\n    const activeAccount = await this.loadActiveAccount();\n\n    if (activeAccount) {\n      if (!forcePermission) {\n        return activeAccount.address;\n      }\n\n      await this.clearActiveAccount();\n    }\n\n    try {\n      const permissions = await this.wallet.client.requestPermissions(options);\n      this.accountAddress = permissions.accountInfo.address;\n      return this.accountAddress;\n    } catch (e: any) {\n      console.log(e);\n      throw e?.title;\n    }\n  }\n\n  async requestSign() {\n    // The data to format\n    const timestamp = new Date().toISOString();\n    const input = 'Hello!';\n\n    // The full string\n    const formattedInput: string = ['Tezos Signed Message:', APP_NAME, timestamp, input].join(' ');\n\n    // The bytes to sign\n    const bytes = char2Bytes(formattedInput);\n    const payloadBytes = '05' + '01' + char2Bytes(String(bytes.length)) + bytes;\n\n    // The payload to send to the wallet\n    const payload: RequestSignPayloadInput = {\n      signingType: SigningType.MICHELINE,\n      payload: payloadBytes,\n      sourceAddress: this.accountAddress,\n    };\n\n    try {\n      // The signing\n      const signedPayload = await this.wallet.client.requestSignPayload(payload);\n      // The signature\n      const { signature } = signedPayload;\n      this.signature = signature;\n      return signature;\n    } catch (e: any) {\n      console.error(e);\n      throw e?.title;\n    }\n  }\n}\n\nexport default new WalletController();\n","import axios from 'axios';\n\nconst timeout = 600000;\nconst axiosInstance = axios.create({\n  baseURL: 'http://84.201.184.103:5000/api',\n  timeout,\n});\n\n// const defaultErrorInterceptor = (error) => Promise.reject(error);\n// const defaultRequestInterceptor = (config) => config;\n// const defaultResponseInterceptor = (response) => response;\n\nexport function setHeader(key: string, value: string) {\n  axiosInstance.defaults.headers.common[key] = value;\n}\n\nexport function unsetHeader(key: string) {\n  delete axiosInstance.defaults.headers.common[key];\n}\n\n// export function addRequestInterceptor({ request, error }) {\n//   const interceptor = axiosInstance.interceptors.request.use(\n//     request || defaultRequestInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.request.eject(interceptor);\n//   };\n// }\n\n// export function addResponseInterceptor({ response, error }) {\n//   const interceptor = axiosInstance.interceptors.response.use(\n//     response || defaultResponseInterceptor,\n//     error || defaultErrorInterceptor\n//   );\n//   return () => {\n//     axiosInstance.interceptors.response.eject(interceptor);\n//   };\n// }\n\n// const get = (url, config) => {\n//   return axiosInstance.get(url, config).then((response) => response.data);\n// };\n\nconst client = {\n  get: axiosInstance.get,\n  delete: axiosInstance.delete,\n  post: axiosInstance.post,\n  put: axiosInstance.put,\n  patch: axiosInstance.patch,\n  request: axiosInstance.request,\n};\n\nexport default client;\n","import client from '@/api/client';\n\nexport function fetchLinkData({ link }: { link: string }): Promise<any> {\n  return client.get('/link', { params: { link } });\n}\n\nexport function checkUser({\n  account,\n  signature,\n  link,\n}: {\n  account: string;\n  signature: string;\n  link: string;\n}): Promise<any> {\n  return client.post('/link/check', { account, signature, link });\n}\n\nexport function searchTokens({ q }: { q: string }): Promise<any> {\n  return client.get('/tokens', { params: { q } });\n}\n\nexport function searchToken({ contract }: { contract: string }): Promise<any> {\n  return client.get('/token', { params: { contract } });\n}\n\nexport function createSecureLink(params: any): Promise<any> {\n  return client.post('/link', params);\n}\n","import { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport React, { FC } from 'react';\n\nexport const Loader: FC = (props) => {\n  const icon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return <Spin indicator={icon} {...props} />;\n};\n","import { Steps } from 'antd';\nimport React, { FC } from 'react';\n\nimport { Loader } from '@/components/loader/loader';\n\nimport './authorization-steps.scss';\nimport { StepStatusType, StepType } from '@/types/steps';\n\nconst { Step } = Steps;\n\ntype Props = {\n  steps: StepType[];\n  current: number;\n  error?: string;\n  status: StepStatusType;\n};\n\nexport const AuthorizationSteps: FC<Props> = ({ steps, current, status, error, ...rest }) => {\n  return (\n    <Steps {...rest} current={current} status={status} direction=\"vertical\" className=\"authorization-steps\">\n      {steps.map(({ title, description }, index) => (\n        <Step\n          title={title}\n          description={index === current ? error : description}\n          key={title}\n          className=\"authorization-steps__step\"\n          subTitle={index === current && status === 'process' && <Loader />}\n        />\n      ))}\n    </Steps>\n  );\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useFetch = <T>(\n  fetchMethod: (params: any) => Promise<any>,\n  initialParams: Record<string, any> = {},\n  forceStart = false\n) => {\n  const [params, updateParams] = useState(initialParams);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState<T>();\n  const [hasError, setHasError] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [refetchIndex, setRefetchIndex] = useState(0);\n\n  const refetch = () => setRefetchIndex((prevRefetchIndex) => prevRefetchIndex + 1);\n\n  const fetch = useCallback(\n    (restParams = {}) => {\n      setIsLoading(true);\n\n      return fetchMethod({ ...params, ...restParams })\n        .then((response) => {\n          if (response.status === 200) {\n            setData(response.data);\n          } else {\n            setHasError(true);\n            setErrorMessage(response.data);\n          }\n          return response.data;\n        })\n        .catch((err) => {\n          setHasError(true);\n          setErrorMessage(err?.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n          setIsDone(true);\n        });\n    },\n    [setIsLoading, fetchMethod, params, setData, setHasError, setErrorMessage]\n  );\n\n  useEffect(() => {\n    if (!forceStart) {\n      return;\n    }\n\n    fetch();\n  }, [fetch, forceStart, refetchIndex]);\n\n  return { fetch, data, isLoading, isDone, hasError, errorMessage, updateParams, refetch };\n};\n\nexport default useFetch;\n","import { SecureLinkType } from '@/types/links';\nimport React, { FC } from 'react';\n\nimport './link-data.scss';\n\nexport const LinkDataView: FC<SecureLinkType> = ({ title, links, token }) => {\n  const isSeparateLink = links.length > 1;\n  const minBalance = parseInt(links[0].minBalance || '');\n\n  return (\n    <div className=\"rule\">\n      {title && <div className=\"rule__title\">{title}</div>}\n      <div className=\"rule__description\">\n        You need to have\n        {!isSeparateLink && <span className=\"rule__balance\">{minBalance || 'any'}</span>}\n        <span className=\"rule__token\">{token.metadata?.name || token.contract?.address}</span>\n        to access\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useMemo, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Button } from '@/components/button/button';\nimport { WalletController } from '@/services/wallets';\n\nimport { useCallback } from 'react';\nimport { checkUser, fetchLinkData } from '@/api/api';\nimport { AuthorizationSteps } from '@/components/authorization-steps/authorization-steps';\nimport { useSteps } from '@/hooks/useSteps';\nimport useFetch from '@/hooks/useFetch';\nimport { Loader } from '@/components/loader/loader';\nimport { LinkDataView } from '@/components/link-data/link-data';\n\nimport { LinkType, SecureLinkType } from '@/types/links';\nimport './authorize.scss';\n\nconst walletController = new WalletController();\n\nconst STEPS = [\n  { title: 'Connect wallet' },\n  { title: 'Sign data' },\n  { title: 'Check wallet balance' },\n  { title: 'Success!' },\n];\n\nexport const AuthorizePage: FC = () => {\n  const { linkId } = useParams();\n  const { steps, current, status, error, setCurrent, setStatus, setError, nextStep } = useSteps(STEPS);\n  const [links, setLinks] = useState<LinkType[]>([]);\n  const isLoadingActiveAccount = useRef(false);\n\n  const fetchLinkRequest = useFetch<SecureLinkType>(fetchLinkData, { link: linkId || '' }, true);\n  const isUrlIncorrect = useMemo(\n    () => fetchLinkRequest.hasError || (fetchLinkRequest.data && !fetchLinkRequest.data.title),\n    [fetchLinkRequest]\n  );\n\n  const tokenName =\n    fetchLinkRequest?.data?.token?.metadata?.name || fetchLinkRequest?.data?.token?.metadata?.symbol || '';\n\n  const handleSuccess = useCallback(\n    (links) => {\n      setStatus('process');\n      setLinks(links);\n      if (links.length === 1) {\n        const { link } = links[0];\n\n        setTimeout(() => {\n          setStatus('finish');\n          window.open(link);\n        }, 2000);\n      }\n    },\n    [setStatus, setLinks]\n  );\n\n  const checkWalletBalance = useCallback(() => {\n    setStatus('process');\n    const account = walletController.getAccountAddress() || '';\n    const signature = walletController.getSignature() || '';\n    const link = linkId || '';\n\n    checkUser({ account, signature, link })\n      .then((res) => {\n        if (res.data.status === 'ok') {\n          nextStep();\n          handleSuccess(res.data.links);\n        } else {\n          setError(res.data.message);\n        }\n      })\n      .catch((e) => {\n        setError(e?.response?.data || e?.message);\n      });\n  }, [nextStep, setStatus, setError, handleSuccess, linkId]);\n\n  const signData = useCallback(() => {\n    setStatus('process');\n    walletController\n      .requestSign()\n      .then(() => {\n        nextStep();\n        checkWalletBalance();\n      })\n      .catch((e) => {\n        setError(e);\n      });\n  }, [nextStep, setStatus, setError, checkWalletBalance]);\n\n  const connectWallet = useCallback(() => {\n    setCurrent(0);\n    setError('');\n    setStatus('process');\n    walletController\n      .connectWallet(true)\n      .then(() => {\n        nextStep();\n        signData();\n      })\n      .catch((e) => {\n        setError(e);\n      });\n  }, [nextStep, setStatus, setError, setCurrent, signData]);\n\n  // Restore connected wallet\n  // useEffect(() => {\n  //   if (!isLoadingActiveAccount.current) {\n  //     isLoadingActiveAccount.current = true;\n\n  //     walletController\n  //       .loadActiveAccount()\n  //       .then((account) => {\n  //         if (account) {\n  //           nextStep();\n  //           nextStep();\n  //           checkWalletBalance();\n  //           console.log('try to sign data');\n  //         }\n  //       })\n  //       .catch((e) => {\n  //         console.error(e);\n  //       });\n  //   }\n  // }, [checkWalletBalance, nextStep]);\n\n  return (\n    <div className=\"authorize\">\n      <h2 className=\"authorize__title\">Connect wallet to get access</h2>\n\n      {fetchLinkRequest.isLoading && <Loader />}\n\n      {isUrlIncorrect && (\n        <span className=\"authorize__error\">\n          404 Link not found - <span className=\"authorize__error-link\">/{linkId}</span>\n        </span>\n      )}\n\n      {links.length > 0 && (\n        <div className=\"authorize__links\">\n          <h4 className=\"authorize__link-title\">You can access to:</h4>\n          {links.map((link, index) => (\n            <span key={index}>\n              {`${index + 1}. `}\n              <a className=\"authorize__link\" href={link.link} target=\"_blank\" rel=\"noreferrer\" key={index}>\n                {link.link}\n              </a>\n              {!!link.minBalance && ` - ${link.minBalance} ${tokenName} tokens`}\n            </span>\n          ))}\n        </div>\n      )}\n\n      {fetchLinkRequest.data && (\n        <div className={`authorize__data authorize__data--hidden-${links.length > 0}`}>\n          <LinkDataView {...fetchLinkRequest.data} />\n          <div className=\"authorize__steps\">\n            <AuthorizationSteps steps={steps} current={current} error={error} status={status} />\n          </div>\n          <Button type=\"primary\" onClick={connectWallet}>\n            Connect wallet\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { StepStatusType, StepType } from '@/types/steps';\nimport { useCallback, useMemo, useState } from 'react';\n\nexport const useSteps = (_steps: Omit<StepType, 'status'>[]) => {\n  const initialSteps = useMemo(() => _steps.map((step) => ({ ...step, status: 'wait' as StepStatusType })), [_steps]);\n\n  const [current, setCurrent] = useState(0);\n  const [steps, setSteps] = useState<StepType[]>(initialSteps);\n  const [status, setStatus] = useState<StepStatusType>('wait');\n  const [error, setStateError] = useState<string>('');\n\n  const nextStep = (status: StepStatusType = 'finish') => {\n    setStatus(status);\n    setCurrent((val) => val + 1);\n  };\n\n  const setError = (error: string) => {\n    setStatus('error');\n    setStateError(error);\n  };\n\n  return {\n    steps,\n    current,\n    status,\n    error,\n    setCurrent,\n    setStatus,\n    setError,\n    nextStep,\n  };\n};\n","export function hasMessage(value: unknown): value is { description: string } {\n  return typeof value === 'object' && value !== null && 'description' in value;\n}\n\nexport function formatIpfsUrl(url: string) {\n  return url.replace('ipfs://', 'https://ipfs.io/ipfs/');\n}\n","import React, { FC, useCallback, useMemo, useState } from 'react';\nimport { AutoComplete } from 'antd';\nimport { useDebounce } from '@/hooks/useDebounce';\nimport { searchToken, searchTokens } from '@/api/api';\nimport { formatIpfsUrl } from '@/utils/common';\n\nimport './token-auto-complete.scss';\nimport useFetch from '@/hooks/useFetch';\nimport { Loader } from '../loader/loader';\n\ntype TokenDataType = {\n  id: number;\n  metadata?: any;\n  contract: { address: string };\n};\n\nconst renderToken = (token: TokenDataType) => {\n  const { metadata } = token;\n  const icon = metadata && formatIpfsUrl(metadata.image || metadata.thumbnailUri || metadata.displayUri || '');\n  const title = metadata?.name || '';\n  const symbol = metadata?.symbol || '';\n  const contract = token.contract.address;\n  const shouldShowContract = !symbol && !title;\n\n  return (\n    <div className=\"link-option\">\n      {icon && <span className=\"link-option__icon\" style={{ backgroundImage: `url(${icon})` }}></span>}\n      {symbol && <span className=\"link-option__symbol\">{symbol}</span>}\n      {title && <span className=\"link-option__title\">{title}</span>}\n      {shouldShowContract && <span className=\"link-option__contract\">{contract}</span>}\n    </div>\n  );\n};\n\nconst renderSearchOptions = (options: TokenDataType[]) => {\n  return options.map((option: any) => {\n    return {\n      value: String(option.id),\n      label: renderToken(option),\n    };\n  });\n};\n\ntype Props = {\n  onSelect: (val: any) => void;\n};\nexport const TokenAutoComplete: FC<Props> = ({ onSelect }) => {\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState<TokenDataType[]>([]);\n  const [selectedToken, setSelectedToken] = useState<TokenDataType>();\n  const searchTokensRequest = useFetch(searchTokens);\n  const debouncedTokenSearch = useDebounce(searchTokensRequest.fetch, 300);\n  const searchTokenRequest = useFetch(searchToken);\n\n  const onSearch = useCallback(\n    (searchText: string) => {\n      setSearch(searchText);\n\n      if (!searchText) {\n        setOptions([]);\n        return;\n      }\n      debouncedTokenSearch({ q: searchText }).then((res) => {\n        setOptions(res.list || []);\n      });\n    },\n    [debouncedTokenSearch, setOptions, setSearch]\n  );\n\n  const renderedOptions = useMemo(() => renderSearchOptions(options), [options]);\n\n  const handleSelect = useCallback(\n    (id: any) => {\n      const token = options.find((op) => String(op.id) === id);\n      const contract = token?.contract.address || '';\n      setSelectedToken(token);\n\n      if (contract) {\n        searchTokenRequest.fetch({ contract }).then((response) => {\n          onSelect(response);\n        });\n      }\n    },\n    [options, setSelectedToken, searchTokenRequest, onSelect]\n  );\n  const handleClear = useCallback(() => {\n    setSearch('');\n    setOptions([]);\n    setSelectedToken(undefined);\n    onSelect(null);\n  }, [setSearch, setOptions, setSelectedToken, onSelect]);\n\n  return (\n    <div className=\"token-complete\">\n      <AutoComplete\n        options={renderedOptions}\n        placeholder=\"Token name or contract address\"\n        notFoundContent={\n          (searchTokensRequest.isLoading && 'Loading...') || (search && 'Token not found') || 'Type something to search'\n        }\n        onSearch={onSearch}\n        onSelect={handleSelect}\n        allowClear={true}\n        onClear={handleClear}\n      >\n        {selectedToken && <div className=\"token-complete__selection\">{renderToken(selectedToken)}</div>}\n      </AutoComplete>\n      {searchTokenRequest.isLoading && <Loader />}\n    </div>\n  );\n};\n","import { useRef, useEffect } from 'react';\n\nexport function useDebounce(func: any, delay: number, cleanUp = false) {\n  const timeoutRef = useRef<any>();\n\n  function clearTimer() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }\n\n  useEffect(() => (cleanUp ? clearTimer : undefined), [cleanUp]);\n\n  return (...args: any): Promise<any> => {\n    clearTimer();\n\n    return new Promise((resolve) => {\n      timeoutRef.current = setTimeout(() => {\n        resolve(func(...args));\n      }, delay);\n    });\n  };\n}\n","/* eslint-disable max-len */\nconst HTTP_VALIDATOR =\n  /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/;\nconst TELEGRAM_VALIDATOR = /^(https:\\/\\/)?t\\.me\\/[\\S]+$/;\n\nexport function validateLink(link: any, type: string): boolean {\n  if (type === 'http') return HTTP_VALIDATOR.test(link);\n  if (type === 'telegram') return TELEGRAM_VALIDATOR.test(link);\n\n  return false;\n}\n","import React, { FC, useCallback, useMemo, useState } from 'react';\n\nimport { Form, Input, Radio } from 'antd';\nimport { formatIpfsUrl } from '@/utils/common';\nimport { validateLink } from '@/utils/validators';\nimport { TokenType } from '@/types/links';\n\nimport './create-link-token-balance.scss';\n\nconst PLACEHOLDERS: any = {\n  http: { link: 'https://greenknight.com/secret' },\n  telegram: { link: 'https://t.me/GreenKnight_secret' },\n};\n\ntype CreateLinkTokenBalanceProps = {\n  token: TokenType;\n  withHeader?: boolean;\n};\n\nexport const CreateLinkTokenBalance: FC<CreateLinkTokenBalanceProps> = ({ token, withHeader = false }) => {\n  const [linkType, setLinkType] = useState('http');\n  const { tokenId, metadata, totalSupply } = token;\n  const decimals = useMemo(() => parseInt(metadata?.decimals || '0'), [metadata]);\n  const image = useMemo(\n    () =>\n      formatIpfsUrl(metadata?.image || metadata?.thumbnailUri || metadata?.displayUri || metadata?.artifactUri || ''),\n    [metadata]\n  );\n  const supplyNumber = useMemo(() => parseInt(totalSupply || '0') / 10 ** decimals, [totalSupply, decimals]);\n  const hasMinBalance = useMemo(() => supplyNumber > 1 || decimals > 0, [supplyNumber, decimals]);\n\n  const handleLinkTypeChange = useCallback(\n    (e: any) => {\n      setLinkType(e.target.value);\n    },\n    [setLinkType]\n  );\n\n  return (\n    <>\n      {withHeader && (\n        <Form.Item wrapperCol={{ offset: 7 }}>\n          <div className=\"link-token-balance__header\">\n            <div className=\"link-token-balance__icon\" style={{ backgroundImage: `url(${image})` }} />\n            <div className=\"link-token-balance__data\">\n              <div>\n                Token ID: <b>{tokenId}</b>\n              </div>\n              <div>\n                Supply: <b>{supplyNumber}</b>\n              </div>\n            </div>\n          </div>\n        </Form.Item>\n      )}\n      {hasMinBalance && (\n        <Form.Item\n          label=\"Min balance\"\n          name={['minBalance', tokenId]}\n          tooltip={`Minimal balance of tokens, \\\n        if not specified then any quantity will be sufficient, decimals is ${decimals}`}\n        >\n          <Input placeholder=\"any\" type=\"number\" />\n        </Form.Item>\n      )}\n\n      <Form.Item label=\"Link type\" name={['linkType', tokenId]} initialValue={'http'}>\n        <Radio.Group optionType=\"button\" buttonStyle=\"outline\" onChange={handleLinkTypeChange} value={linkType}>\n          <Radio.Button value=\"http\">HTTP</Radio.Button>\n          <Radio.Button value=\"telegram\">Telegram</Radio.Button>\n          <Radio.Button value=\"discord\" disabled>\n            Discord\n          </Radio.Button>\n        </Radio.Group>\n      </Form.Item>\n\n      <Form.Item\n        name={['link', tokenId]}\n        label=\"Link\"\n        tooltip=\"Link to resource, which you want to protect\"\n        rules={[\n          {\n            validator: (_, value) => {\n              if (!value) return Promise.reject(new Error('Link is required'));\n              return validateLink(value, linkType) ? Promise.resolve() : Promise.reject(new Error('Incorrect link'));\n            },\n          },\n        ]}\n      >\n        <Input placeholder={PLACEHOLDERS[linkType].link} />\n      </Form.Item>\n    </>\n  );\n};\n","import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { Button } from '@/components/button/button';\nimport { Form, Input, Checkbox } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport './create-link.scss';\nimport { TokenAutoComplete } from '@/components/token-auto-complete/token-auto-complete';\nimport { SecureLinkType, TokenType } from '@/types/links';\nimport { isFA12Token, isFA2Token } from '@/utils/tokens';\nimport { CreateLinkTokenBalance } from '@/components/create-link-token-balance/create-link-token-balance';\nimport useFetch from '@/hooks/useFetch';\nimport { createSecureLink } from '@/api/api';\n\nconst BASE_LINK = window.location.origin;\n\nexport const CreateLinkPage: FC = () => {\n  const [form] = Form.useForm();\n  const [token, setToken] = useState<TokenType[]>();\n  const [isSeparateLink, setIsSeparateLink] = useState(false);\n\n  const selectToken = useCallback(\n    (token: TokenType[] | null) => {\n      const sortedTokens = token?.sort((a, b) => parseInt(a.tokenId) - parseInt(b.tokenId));\n      setToken(sortedTokens);\n    },\n    [setToken]\n  );\n\n  const isTokenFA12 = useMemo(() => isFA12Token(token), [token]);\n  const isTokenFA2 = useMemo(() => isFA2Token(token), [token]);\n\n  const handleSeparateLinkChange = useCallback((e: any) => setIsSeparateLink(e.target.checked), [setIsSeparateLink]);\n\n  const trySubmitForm = useCallback(() => form.submit(), [form]);\n\n  const createLinkRequest = useFetch<SecureLinkType>(createSecureLink);\n\n  const handleSubmit = useCallback(\n    (data: any) => {\n      if (!token) return;\n\n      const { title, linkType, link, minBalance } = data;\n\n      const links = Object.entries(linkType).reduce(\n        (acc: any[], [id, type]) => [\n          ...acc,\n          {\n            linkType: type,\n            tokenId: id,\n            link: link[id],\n            minBalance: minBalance?.[id] || 0,\n          },\n        ],\n        []\n      );\n\n      const requestParams = { title, token: token[0], links };\n\n      createLinkRequest.fetch(requestParams);\n    },\n    [token, createLinkRequest]\n  );\n\n  // scroll to top on link created\n  useEffect(\n    () => () => {\n      try {\n        window.scroll({\n          top: 0,\n          left: 0,\n          behavior: 'smooth',\n        });\n      } catch (error) {\n        window.scrollTo(0, 0);\n      }\n    },\n    [createLinkRequest.isDone]\n  );\n\n  return (\n    <div className=\"create-link\">\n      <h2 className=\"create-link__title\">Create secure link to resource to grant access for you loyal audience</h2>\n\n      {createLinkRequest.isDone && !createLinkRequest.hasError && (\n        <div className=\"create-link__result\">\n          <div>Link is protected, for authorization use:</div>\n          <div>\n            <a href={`${BASE_LINK}/${createLinkRequest.data?.code}`} target=\"_blank\" rel=\"noreferrer\">\n              {BASE_LINK}/<b>{createLinkRequest.data?.code}</b>\n            </a>\n          </div>\n        </div>\n      )}\n\n      {createLinkRequest.hasError && (\n        <div className=\"create-link__result\">\n          <div className=\"create-link__error\">{createLinkRequest.errorMessage}</div>\n        </div>\n      )}\n\n      <div className={`create-link__form create-link__form--submitted-${createLinkRequest.isDone}`}>\n        <Form\n          layout=\"horizontal\"\n          labelCol={{ span: 7 }}\n          form={form}\n          onFinish={handleSubmit}\n          requiredMark={false}\n          size=\"large\"\n          scrollToFirstError={true}\n        >\n          <Form.Item\n            name=\"title\"\n            label=\"Title\"\n            tooltip=\"Title that users will see when authorizing\"\n            rules={[{ required: true, message: 'Title is required' }]}\n          >\n            <Input placeholder=\"Some secret resource\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Token\"\n            tooltip=\"Name, symbol or contract address of FA1.2 or FA2 token\"\n            rules={[\n              { validator: () => (token ? Promise.resolve() : Promise.reject(new Error('Please choose token'))) },\n            ]}\n          >\n            <TokenAutoComplete onSelect={selectToken} />\n          </Form.Item>\n\n          {token ? (\n            <>\n              <Form.Item wrapperCol={{ offset: 7 }}>\n                <div className=\"create-link__token-description\">\n                  {isTokenFA12 && (\n                    <>\n                      <div>FA1.2 token</div>\n                      <div>You can specify minimal balance of tokens for access</div>\n                    </>\n                  )}\n                  {isTokenFA2 && (\n                    <>\n                      <div>FA2 token</div>\n                      <div className=\"create-link__separate-text\">\n                        You can specify a separate link for each token ID or use one link for all\n                      </div>\n                      <Checkbox onChange={handleSeparateLinkChange} checked={isSeparateLink}>\n                        Separate links (<b>{token.length}</b> tokenId found)\n                      </Checkbox>\n                    </>\n                  )}\n                </div>\n              </Form.Item>\n\n              {isSeparateLink ? (\n                token.map((t) => <CreateLinkTokenBalance token={t} withHeader key={t.tokenId} />)\n              ) : (\n                <CreateLinkTokenBalance token={token[0]} />\n              )}\n\n              <Form.Item className=\"create-link__submit\">\n                <Button type=\"primary\" onClick={trySubmitForm} loading={createLinkRequest.isLoading}>\n                  Create secure link\n                </Button>\n              </Form.Item>\n            </>\n          ) : (\n            <div className=\"create-link__tip\">select token</div>\n          )}\n\n          <div className=\"create-link__info\">\n            <div>\n              Use\n              <a\n                href=\"https://github.com/nikitaGetman/tezos-flame-defi/blob/master/telegram-bot/readme.md\"\n                target=\"_blank\"\n                style={{ marginLeft: 4, marginRight: 4 }}\n                rel=\"noreferrer\"\n              >\n                Telegram bot\n              </a>\n              to protect your chats.\n            </div>\n            <div>\n              Use\n              <Link to=\"/plugin\" target=\"_blank\" style={{ marginLeft: 4, marginRight: 4 }}>\n                Plugin\n              </Link>\n              to protect your http resources.\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n","export function isFA12Token(tokens: any): boolean {\n  if (tokens?.standard) return tokens.standard === 'fa1.2';\n  return tokens?.length && tokens[0].standard === 'fa1.2';\n}\n\nexport function isFA2Token(tokens: any): boolean {\n  if (tokens?.standard) return tokens.standard === 'fa2';\n  return tokens?.length && tokens[0].standard === 'fa2';\n}\n","import React, { FC, useState } from 'react';\nimport { useEffect } from 'react';\n\nimport './random-emoji.scss';\n\ntype Props = {};\n\nconst EMOJIS = [\n  '🦸🏼',\n  '🧝',\n  '💻',\n  '🤖',\n  '😇',\n  '😎',\n  '🙌🏻',\n  '🦾',\n  '🦄',\n  '🐨',\n  '🦑',\n  '🦖',\n  '🐊',\n  '🐢',\n  '🌹',\n  '🌲',\n  '🌈',\n  '🔥',\n  '🥦',\n  '🍒',\n  '🏆',\n  '🔑',\n];\n\nexport const RandomEmoji: FC<Props> = () => {\n  const [emoji, setEmoji] = useState(EMOJIS[0]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const index = Math.floor(Math.random() * EMOJIS.length);\n      setEmoji(EMOJIS[index]);\n    }, 4000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [setEmoji]);\n\n  return <span className=\"emoji\">{emoji}</span>;\n};\n","import React, { FC, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Button } from '@/components/button/button';\n\nimport './main.scss';\nimport { RandomEmoji } from '@/components/random-emoji/random-emoji';\n\nexport const MainPage: FC = () => {\n  const navigate = useNavigate();\n  const handleClick = useCallback(() => {\n    navigate('/create');\n  }, [navigate]);\n\n  return (\n    <div className=\"main\">\n      <h1 className=\"main__title\">\n        Grant access to special resources\n        <br /> to your loyal users\n        <RandomEmoji />\n      </h1>\n      {/*  */}\n\n      <Button type=\"primary\" onClick={handleClick}>\n        Create secure resource link\n      </Button>\n\n      <div className=\"main__list\">\n        <div className=\"main__sublist\">\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--1\">1.</div>\n            <div className=\"main__text\">Offer additional content to the owners of your NFT</div>\n          </div>\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--2\">2.</div>\n            <div className=\"main__text\">Grant special access to your dedicated users</div>\n          </div>\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--3\">3.</div>\n            <div className=\"main__text\">Unite your users in Telegram and Discord communities</div>\n          </div>\n        </div>\n        <div className=\"main__sublist\">\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--4\">4.</div>\n            <div className=\"main__text\">Develop a community around your product</div>\n          </div>\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--5\">5.</div>\n            <div className=\"main__text\">Communicate with your loyal audience</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useCallback, useEffect } from 'react';\n\nexport const PluginPage: FC = () => {\n  useEffect(() => {\n    window.location.href = 'https://github.com/nikitaGetman/tezos-flame-defi/blob/master/plugin/readme.md';\n  }, []);\n\n  return (\n    <div className=\"plugin\">\n      <p>How to use plugin</p>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const TelegramBot: FC = () => {\n  return <div>TELEGRAM BOT</div>;\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { BaseLayout } from './components/base-layout/base-layout';\nimport { AuthorizePage } from './pages/authorization/authorization';\nimport { CreateLinkPage } from './pages/create-link/create-link';\nimport { MainPage } from './pages/main/main';\nimport { PluginPage } from './pages/plugin/plugin';\nimport { TelegramBot } from './pages/telegram-bot/telegram-bot';\n\nexport const App: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<BaseLayout />}>\n        <Route index element={<MainPage />} />\n        <Route path=\"create\" element={<CreateLinkPage />} />\n        <Route path=\"plugin\" element={<PluginPage />} />\n        <Route path=\":linkId\" element={<AuthorizePage />} />\n        <Route path=\"telegram-bot\" element={<TelegramBot />} />\n      </Route>\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nimport './assets/styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}