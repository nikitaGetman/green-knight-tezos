{"version":3,"sources":["components/header/header.tsx","components/base-layout/base-layout.tsx","components/button/button.tsx","services/wallets.ts","components/loader/loader.tsx","components/authorization-steps/authorization-steps.tsx","hooks/useFetch.ts","components/rule-data/rule-data.tsx","pages/authorization/authorization.tsx","hooks/useSteps.ts","api/api.ts","pages/create/create.tsx","components/random-emoji/random-emoji.tsx","pages/main/main.tsx","pages/plugin/plugin.tsx","App.tsx","index.tsx"],"names":["Header","className","to","BaseLayout","Button","children","rest","shape","size","type","APP_NAME","WalletController","network","NetworkType","HANGZHOUNET","wallet","accountAddress","signature","this","options","name","iconUrl","process","preferredNetwork","BeaconWallet","client","getActiveAccount","then","account","address","clearActiveAccount","a","forcePermission","loadActiveAccount","activeAccount","requestPermissions","permissions","accountInfo","console","log","title","timestamp","Date","toISOString","formattedInput","join","bytes","char2Bytes","payloadBytes","String","length","payload","signingType","SigningType","MICHELINE","sourceAddress","requestSignPayload","signedPayload","error","Loader","props","icon","LoadingOutlined","style","fontSize","spin","indicator","Step","Steps","AuthorizationSteps","steps","current","status","direction","map","index","description","subTitle","MOCK_DATA","useFetch","initialUrl","initialParams","skip","useState","url","updateUrl","params","updateParams","isLoading","setIsLoading","data","setData","hasError","setHasError","errorMessage","setErrorMessage","refetchIndex","setRefetchIndex","refetch","prevRefetchIndex","fetch","useCallback","response","err","message","useEffect","RuleDataView","balance","token","walletController","STEPS","AuthorizePage","ruleId","useParams","_steps","initialSteps","useMemo","step","setCurrent","setStatus","setStateError","setError","nextStep","val","useSteps","ruleFetching","rule","handleSuccess","href","setTimeout","window","open","checkWalletBalance","getAccountAddress","getSignature","Promise","resolve","reject","res","catch","e","signData","requestSign","connectWallet","onClick","CreatePage","EMOJIS","RandomEmoji","emoji","setEmoji","interval","setInterval","Math","floor","random","clearInterval","MainPage","navigate","useNavigate","handleClick","PluginPage","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d37fc012.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './header.scss';\n\ntype Props = {};\n\nexport const Header: FC<Props> = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\"></div>\n\n      <div className=\"header__nav\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/create\">Create access</Link>\n        <Link to=\"/plugin\">Use our plugin</Link>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from '../header/header';\n\nimport './base-layout.scss';\n\nexport const BaseLayout: FC = () => {\n  return (\n    <div className=\"base-layout\">\n      <Header />\n      <div className=\"base-layout__main\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n","import { Button as AntButton, ButtonProps } from 'antd';\nimport React, { FC } from 'react';\nimport './button.scss';\n\nexport const Button: FC<ButtonProps> = ({ children, ...rest }) => {\n  return (\n    <AntButton shape=\"round\" size=\"large\" type=\"default\" {...rest}>\n      {children}\n    </AntButton>\n  );\n};\n","// import { TezosToolkit } from '@taquito/taquito';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { char2Bytes } from '@taquito/utils';\nimport { NetworkType, RequestSignPayloadInput, SigningType } from '@airgap/beacon-sdk';\n\nconst APP_NAME = 'Test app';\n\nexport class WalletController {\n  // private tezos;\n  private network: NetworkType;\n  private wallet: BeaconWallet;\n  private accountAddress: string = '';\n  private signature: string = '';\n\n  constructor(network = NetworkType.HANGZHOUNET) {\n    this.network = network;\n\n    const options = {\n      name: APP_NAME,\n      iconUrl: `${process.env.REACT_APP_BASE_URL}/favicon.ico`,\n      preferredNetwork: this.network,\n    };\n\n    this.wallet = new BeaconWallet(options);\n\n    // this.tezos = new TezosToolkit(accountSettings.provider);\n  }\n  getAccountAddress() {\n    return this.accountAddress;\n  }\n  getSignature() {\n    return this.signature;\n  }\n\n  loadActiveAccount() {\n    return this.wallet.client.getActiveAccount().then((account) => {\n      if (account) {\n        this.accountAddress = account.address;\n      }\n      return account;\n    });\n  }\n\n  clearActiveAccount() {\n    return this.wallet.client.clearActiveAccount().then(() => {\n      this.accountAddress = '';\n    });\n  }\n\n  async connectWallet(forcePermission = false, network = this.network) {\n    const options = {\n      network: {\n        type: network,\n      },\n    };\n\n    const activeAccount = await this.loadActiveAccount();\n\n    if (activeAccount) {\n      if (!forcePermission) {\n        return activeAccount.address;\n      }\n\n      await this.clearActiveAccount();\n    }\n\n    try {\n      const permissions = await this.wallet.client.requestPermissions(options);\n      this.accountAddress = permissions.accountInfo.address;\n      return this.accountAddress;\n    } catch (e: any) {\n      console.log(e);\n      throw e?.title;\n    }\n  }\n\n  async requestSign() {\n    // The data to format\n    const timestamp = new Date().toISOString();\n    const input = 'Hello!';\n\n    // The full string\n    const formattedInput: string = ['Tezos Signed Message:', APP_NAME, timestamp, input].join(' ');\n\n    // The bytes to sign\n    const bytes = char2Bytes(formattedInput);\n    const payloadBytes = '05' + '01' + char2Bytes(String(bytes.length)) + bytes;\n\n    // The payload to send to the wallet\n    const payload: RequestSignPayloadInput = {\n      signingType: SigningType.MICHELINE,\n      payload: payloadBytes,\n      sourceAddress: this.accountAddress,\n    };\n\n    try {\n      // The signing\n      const signedPayload = await this.wallet.client.requestSignPayload(payload);\n      // The signature\n      const { signature } = signedPayload;\n      this.signature = signature;\n      return signature;\n    } catch (e: any) {\n      console.error(e);\n      throw e?.title;\n    }\n  }\n}\n\nexport default new WalletController();\n","import { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport React, { FC } from 'react';\n\nexport const Loader: FC = (props) => {\n  const icon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return <Spin indicator={icon} {...props} />;\n};\n","import { Steps } from 'antd';\nimport React, { FC } from 'react';\n\nimport { Loader } from '@/components/loader/loader';\n\nimport './authorization-steps.scss';\nimport { StepStatusType, StepType } from '@/types/steps';\n\nconst { Step } = Steps;\n\ntype Props = {\n  steps: StepType[];\n  current: number;\n  error?: string;\n  status: StepStatusType;\n};\n\nexport const AuthorizationSteps: FC<Props> = ({ steps, current, status, error, ...rest }) => {\n  return (\n    <Steps {...rest} current={current} status={status} direction=\"vertical\" className=\"authorization-steps\">\n      {steps.map(({ title, description }, index) => (\n        <Step\n          title={title}\n          description={index === current ? error : description}\n          key={title}\n          className=\"authorization-steps__step\"\n          subTitle={index === current && status === 'process' && <Loader />}\n        />\n      ))}\n    </Steps>\n  );\n};\n","import client from '@/api/client';\nimport { useState, useEffect, useCallback } from 'react';\n\nimport data from '@/api/mocks/data.json';\n\nconst MOCK_DATA: any = data;\n\nconst useFetch = (initialUrl: string, initialParams: Record<string, string> = {}, skip = false) => {\n  const [url, updateUrl] = useState(initialUrl);\n  const [params, updateParams] = useState(initialParams);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [refetchIndex, setRefetchIndex] = useState(0);\n\n  const refetch = () => setRefetchIndex((prevRefetchIndex) => prevRefetchIndex + 1);\n\n  const fetch = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // const response = await client.get(url, { params });\n      const response = { status: 200, data: MOCK_DATA[url] };\n      console.log(url, params, response);\n\n      if (response.status === 200) {\n        setData(response.data);\n      } else {\n        setHasError(true);\n        setErrorMessage(response.data);\n      }\n    } catch (err: any) {\n      setHasError(true);\n      setErrorMessage(err?.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [setIsLoading, url, params, setData, setHasError, setErrorMessage]);\n\n  useEffect(() => {\n    if (skip) {\n      return;\n    }\n\n    fetch();\n  }, [fetch, skip, refetchIndex]);\n\n  return { fetch, data, isLoading, hasError, errorMessage, updateUrl, updateParams, refetch };\n};\n\nexport default useFetch;\n","import { RuleType } from '@/types/rules';\nimport React, { FC } from 'react';\n\nimport './rule-data.scss';\n\nexport const RuleDataView: FC<RuleType> = ({ title, balance, token }) => {\n  return (\n    <div className=\"rule\">\n      {title && <div className=\"rule__title\">{title}</div>}\n      <div className=\"rule__description\">\n        You need to have\n        <span className=\"rule__balance\">{balance}</span>\n        <span className=\"rule__token\">{token?.name}</span>\n        to access\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Button } from '@/components/button/button';\nimport { WalletController } from '@/services/wallets';\n\nimport { useCallback } from 'react';\nimport { checkUser } from '@/api/api';\nimport { AuthorizationSteps } from '@/components/authorization-steps/authorization-steps';\nimport { useSteps } from '@/hooks/useSteps';\nimport useFetch from '@/hooks/useFetch';\nimport { Loader } from '@/components/loader/loader';\nimport { RuleDataView } from '@/components/rule-data/rule-data';\n\nimport './authorize.scss';\n\nconst walletController = new WalletController();\n\nconst STEPS = [\n  { title: 'Connect wallet' },\n  { title: 'Sign data' },\n  { title: 'Check wallet balance' },\n  { title: 'Success!' },\n];\n\nexport const AuthorizePage: FC = () => {\n  const { ruleId } = useParams();\n  const { steps, current, status, setCurrent, error, setStatus, setError, nextStep } = useSteps(STEPS);\n  // Load rule data\n  const ruleFetching = useFetch('/rule', { rule: ruleId || '' });\n\n  // Restore connected wallet\n  // useEffect(() => {\n  //   walletController\n  //     .loadActiveAccount()\n  //     .then((account) => {\n  //       setStatus()\n  //     })\n  //     .catch((e) => {\n  //       console.error(e);\n  //     });\n  // }, []);\n\n  const handleSuccess = useCallback(\n    (payload) => {\n      setStatus('process');\n      const { href } = payload;\n\n      setTimeout(() => {\n        setStatus('finish');\n        window.open(href);\n      }, 2000);\n    },\n    [setStatus]\n  );\n\n  const checkWalletBalance = useCallback(() => {\n    setStatus('process');\n    const account = walletController.getAccountAddress();\n    const signature = walletController.getSignature();\n    const rule = ruleId || '';\n\n    checkUser(account, signature, rule)\n      .then((res) => {\n        nextStep();\n        handleSuccess(res);\n      })\n      .catch((e) => {\n        setError(e);\n      });\n  }, [nextStep, setStatus, setError, handleSuccess, ruleId]);\n\n  const signData = useCallback(() => {\n    setStatus('process');\n    walletController\n      .requestSign()\n      .then(() => {\n        nextStep();\n        checkWalletBalance();\n      })\n      .catch((e) => {\n        setError(e);\n      });\n  }, [nextStep, setStatus, setError, checkWalletBalance]);\n\n  const connectWallet = useCallback(() => {\n    setStatus('process');\n    walletController\n      .connectWallet(true)\n      .then(() => {\n        nextStep();\n        signData();\n      })\n      .catch((e) => {\n        setError(e);\n      });\n  }, [nextStep, setStatus, setError, signData]);\n\n  return (\n    <div className=\"authorize\">\n      <h2 className=\"authorize__title\">Authorize to get access</h2>\n\n      {ruleFetching.isLoading && <Loader />}\n\n      {ruleFetching.hasError && <span className=\"authorize__error\">Incorrect URL</span>}\n\n      {ruleFetching.data && (\n        <>\n          <RuleDataView {...ruleFetching.data} />\n          <div className=\"authorize__steps\">\n            <AuthorizationSteps steps={steps} current={current} error={error} status={status} />\n          </div>\n          <Button onClick={connectWallet}>Connect wallet</Button>\n        </>\n      )}\n    </div>\n  );\n};\n","import { StepStatusType, StepType } from '@/types/steps';\nimport { useCallback, useMemo, useState } from 'react';\n\nexport const useSteps = (_steps: Omit<StepType, 'status'>[]) => {\n  const initialSteps = useMemo(() => _steps.map((step) => ({ ...step, status: 'wait' as StepStatusType })), [_steps]);\n\n  const [current, setCurrent] = useState(0);\n  const [steps, setSteps] = useState<StepType[]>(initialSteps);\n  const [status, setStatus] = useState<StepStatusType>('wait');\n  const [error, setStateError] = useState<string>('');\n\n  const nextStep = (status: StepStatusType = 'finish') => {\n    setStatus(status);\n    setCurrent((val) => val + 1);\n  };\n\n  const setError = (error: string) => {\n    setStatus('error');\n    setStateError(error);\n  };\n\n  return {\n    steps,\n    current,\n    status,\n    error,\n    setCurrent,\n    setStatus,\n    setError,\n    nextStep,\n  };\n};\n","import client from '@/api/client';\n\nconst BASE_URL = '';\n\nexport function checkUser(account: string, signature: string, ruleId: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const payload = {\n        type: 'telegram',\n        href: 'https://t.me/TezosUkraine',\n      };\n      resolve(payload);\n      //   reject({ message: 'Insufficient funds' });\n    }, 2000);\n  });\n  //   return client.post(`${BASE_URL}/check`, { account, signature });\n}\n\nexport function fetchRuleById(ruleId: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const payload = {\n        type: 'telegram',\n        title: 'Tezos Ukraine - Secret telegram',\n        token: 'TEZ',\n        balance: 100,\n      };\n      resolve(payload);\n      //   reject({ message: 'Insufficient funds' });\n    }, 2000);\n  });\n}\n","import React, { FC } from 'react';\n\nimport { Button } from '@/components/button/button';\n\nexport const CreatePage: FC = () => {\n  return (\n    <div className=\"create\">\n      <p>Create page</p>\n      <Button>Create</Button>\n    </div>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { useEffect } from 'react';\n\nimport './random-emoji.scss';\n\ntype Props = {};\n\nconst EMOJIS = [\n  '🦸🏼',\n  '🧝',\n  '💻',\n  '🤖',\n  '😇',\n  '😎',\n  '🙌🏻',\n  '🦾',\n  '🦄',\n  '🐨',\n  '🦑',\n  '🦖',\n  '🐊',\n  '🐢',\n  '🌹',\n  '🌲',\n  '🌈',\n  '🔥',\n  '🥦',\n  '🍒',\n  '🏆',\n  '🔑',\n];\n\nexport const RandomEmoji: FC<Props> = () => {\n  const [emoji, setEmoji] = useState(EMOJIS[0]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const index = Math.floor(Math.random() * EMOJIS.length);\n      setEmoji(EMOJIS[index]);\n    }, 4000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [setEmoji]);\n\n  return <span className=\"emoji\">{emoji}</span>;\n};\n","import React, { FC, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Button } from '@/components/button/button';\n\nimport './main.scss';\nimport { RandomEmoji } from '@/components/random-emoji/random-emoji';\n\nexport const MainPage: FC = () => {\n  const navigate = useNavigate();\n  const handleClick = useCallback(() => {\n    navigate('/create');\n  }, [navigate]);\n\n  return (\n    <div className=\"main\">\n      <h1 className=\"main__title\">\n        Grant access to special resources\n        <br /> to your loyal users\n        <RandomEmoji />\n      </h1>\n      {/*  */}\n\n      <Button type=\"primary\" onClick={handleClick}>\n        Create secure resource link\n      </Button>\n\n      <div className=\"main__list\">\n        <div className=\"main__sublist\">\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--1\">1.</div>\n            <div className=\"main__text\">Offer additional content to the owners of your NFT</div>\n          </div>\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--2\">2.</div>\n            <div className=\"main__text\">Grant special access to your dedicated users</div>\n          </div>\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--3\">3.</div>\n            <div className=\"main__text\">Unite your users in Telegram and Discord communities</div>\n          </div>\n        </div>\n        <div className=\"main__sublist\">\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--4\">4.</div>\n            <div className=\"main__text\">Develop a community around your product</div>\n          </div>\n          <div className=\"main__item\" onClick={handleClick}>\n            <div className=\"main__number main__number--5\">5.</div>\n            <div className=\"main__text\">Communicate with your loyal audience</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from 'react';\n\nexport const PluginPage: FC = () => {\n  return (\n    <div className=\"plugin\">\n      <p>How to use plugin</p>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { BaseLayout } from './components/base-layout/base-layout';\nimport { AuthorizePage } from './pages/authorization/authorization';\nimport { CreatePage } from './pages/create/create';\nimport { MainPage } from './pages/main/main';\nimport { PluginPage } from './pages/plugin/plugin';\n\nexport const App: FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<BaseLayout />}>\n        <Route index element={<MainPage />} />\n        <Route path=\"create\" element={<CreatePage />} />\n        <Route path=\"plugin\" element={<PluginPage />} />\n        <Route path=\":ruleId\" element={<AuthorizePage />} />\n      </Route>\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nimport './assets/styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}